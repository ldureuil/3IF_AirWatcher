@startuml Partici
title Participation des utilisateurs à l'attribution de points aux particuliers

actor "Utilisateur" as user

participant "CLI" as cli

participant "AuthService" as auth
participant "AuthDataAccess" as authdata

participant "Statistics" as service

participant "PointsManager" as points
participant "DataLoader" as dl
participant "UserDataAccess" as uda

== Authentification d'un utilisateur ==
user -> cli : 1. Authentification
activate cli
cli -> auth : 2. login(login, mdp)

    activate auth
        auth -> authdata : 3. findCredential(login)

        activate authdata
            authdata -> auth : 4. Credentials
        deactivate authdata

        create "s :  Session(USER)" as s
        auth -> s : 5. <<create>>
        auth --> cli : 6. s
        cli --> user : 7. Authentification réussie

== Chargement des données ==
    cli -> dl  : 8. loadData(s.userType)
    activate dl
    alt s.userType == ADMIN
        dl -> dl : charge tous les jeux de données  (capteurs, mesures, cleaners, exclusions, points)
    else s.userType == USER
        dl -> dl : charge capteurs fiables, mesures et cleaners
    else s.userType == PARTICULIER
        dl -> dl : charge capteurs appartenant au particulier, capteurs fiables, mesures, cleaners et points
    else s.userType == FOURNISSEUR
        dl -> dl : charge cleaners appartenant au fournisseur
    end
    create "s1 : Sensor" as s1
    dl -> s1 : <<create>>
    dl --> cli  : 9. capteurs fiables, mesures et cleaners chargés
    deactivate dl

== Requête d’un utilisateur utilisant un capteur s1 ==
        user -> cli : 10. computeZone(lat, lng, period_start, period_end, radius)
        cli -> service : 11. computeZone(lat, lng, period_start, period_end, radius)
        
        activate service
            service -> auth : 12. checkRequiredRole(USER)
            auth --> service : 13. USER

            service -> dl : 14. getSensor(s1.id)
            activate dl
                dl --> service : 15. s1 : Sensor
            deactivate dl

            service -> s1 : 16. getMeasurements()
            activate s1
                s1 --> service : 17. list<Measurement>
            deactivate s1

            service -> service : 18. calcule moyenne AQI

            service -> points : 19. award(s1)
            activate points
                points -> uda : 20. updateUserPoints(s1.userId)
                activate uda
                    points --> service : 21. Points ajoutés
                deactivate uda
            deactivate points

            service --> cli : 22. AQI
        deactivate service
    deactivate auth
deactivate cli
@enduml